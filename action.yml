name: 'CVE Binary Tool'
description: "CVE Binary Tool's official GitHub Action"
author: 'b31ngd3v'
branding:
  icon: 'shield'
  color: 'gray-dark'
inputs:
  nvd_api_key:
    required: false
    description: 'NVD API Key is required for downloading National Vulnerbility Database.'
  exclude_dir:
    required: false
    description: 'While scanning, CVE Binary Tool will ignore these directories.'
  build_command:
    required: false
    description: 'It will run the build_command before running CVE Binary Tool on the build output and the repository content.'
  sbom_type:
    required: false
    description: 'Valid SBOM types are spdx, cyclonedx. (default: spdx)'
  sbom_format:
    required: false
    description: 'Valid SBOM formats are tag, json, yaml. (default: json)'
runs:
  using: 'composite'
  steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    - uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: 'python3-pip'
    - run: pip install git+https://github.com/intel/cve-bin-tool@main reportlab
      shell: bash
    - run: >
        python3 "${GITHUB_ACTION_PATH}/src/scanner.py" .
        --repo '${{ github.repository }}'
        --run-id '${{ github.run_id }}'
        --html-pdf-output "./scan-result"
        --sarif-output "/tmp/scan-report.sarif"
        --nvd-api-key '${{ inputs.nvd_api_key }}'
        --exclude-dir '${{ inputs.exclude_dir }}'
        --build-command '${{ inputs.build_command }}'
        --sbom-type '${{ inputs.sbom_type }}'
        --sbom-format '${{ inputs.sbom_format }}'
      shell: bash
    - uses: actions/upload-artifact@v3
      with:
        name: cve_reports
        path: |
          scan-result.html
          scan-result.pdf
          SBOM.json
        if-no-files-found: ignore
    - uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: /tmp/scan-report.sarif
